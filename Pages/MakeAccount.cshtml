@page "/Registrate"
@model isolaatti_API.Pages.MakeAccount

@{
    Layout = "Shared/_LayoutWebAppOutside";
    ViewData["Title"] = "Regístrate";
}

@section scripts_google
{
    <script>
        var firebaseConfig = {
            apiKey: "AIzaSyDZHVXLR_1imwVb2mCArnYpdbNx6XUPZBQ",
            authDomain: "isolaatti-b6641.firebaseapp.com",
            databaseURL: "https://isolaatti-b6641.firebaseio.com",
            projectId: "isolaatti-b6641",
            storageBucket: "isolaatti-b6641.appspot.com",
            messagingSenderId: "556033448926",
            appId: "1:556033448926:web:35759afc37d6a1585b1b4f",
            measurementId: "G-JQV4WX75RK"
        };
        // Initialize Firebase
        firebase.initializeApp(firebaseConfig);
        
        // if sign up page was opened from somewhere else than front page, user may want to be redirected back
        const thenParam = "@Html.Raw(ViewData["then"])"
        const queryParam = `?then=${encodeURIComponent(thenParam)}`;
                              
        var uiConfig = {
                signInSuccessUrl: `ExternalAuth${queryParam}`,
                signInOptions: [
                  // Leave the lines as is for the providers you want to offer your users.
                  firebase.auth.GoogleAuthProvider.PROVIDER_ID,
                  firebase.auth.FacebookAuthProvider.PROVIDER_ID,
                  "microsoft.com"
                ],
                // tosUrl and privacyPolicyUrl accept either url string or a callback
                // function.
                // Terms of service url/callback.
                tosUrl: '/s/Legal/TermsOfUse',
                // Privacy policy url/callback.
                privacyPolicyUrl: '/estatico/politica_de_privacidad'
              };
        
              // Initialize the FirebaseUI Widget using Firebase.
              var ui = new firebaseui.auth.AuthUI(firebase.auth());
              // The start method will wait until the DOM is loaded.
              ui.start('#firebaseui-auth-container', uiConfig);
        </script>
}

@section metadata
{
    <meta property="og:url" content="https://isolaatti.com/Registrate"/>
    <meta property="og:type" content="website"/>
    <meta property="og:description" content="Inicia sesión. Isolaatti es una plataforma para escuchar la voz del mundo. Una red social donde todo es audio y texto."/>
    <meta property="og:image" content="https://isolaatti.com/res/imgs/metadata-image-isolaatti.png"/>

    <style>
    @@import url('https://fonts.googleapis.com/css2?family=Rubik+Glitch&display=swap');
    </style>
}

<div class="d-flex col-lg-7 col-md-6 flex-column p-3">
    <h2 class="display-4" style="font-family: 'Rubik Glitch', cursive;">
        Escucha la voz del mundo
    </h2>
    <h1 class="display-6 font-weight-lighter">
        ¡Seguramente te encantará!
    </h1>
</div>

@if (Model.LimitOfAccountsReached)
{
    <div class="alert alert-info">
        <h4 class="alert-heading">We're on preview phase</h4>
        <p>At this stage, Isolaatti will only accept up to 50 accounts, so that the development server does not crash. Sorry for that!</p>
    </div>
}
<div class="col-lg-5 col-md-6 justify-content-end align-items-center">
    <form method="POST" id="make_account_form" class="sign-in-up-form mt-3">
        <h2>Registrate</h2>
        <p>
            <a asp-page="LogIn">Inicia sesión</a>
        </p>
        <div class="form-group">
            <label for="username_form_control">Nombre de usuario</label>
            <input type="text" name="username" id="username_form_control" class="form-control"
                   value='@ViewData["user_field"]'>
        </div>
        <div class="form-group">
            <label for="email_form_control">Dirección de correo electrónico</label>
            <input type="email" name="email" id="email_form_control" class="form-control"
                   value='@ViewData["email_field"]'>
        </div>
        <div class="form-group">
            <label for="password_form_control">Contraseña</label>
            <input type="password" name="password" id="password_form_control" class="form-control">
        </div>
        <div class="form-group">
            <label for="confirm_password_form_control">Confirma contraseña</label>
            <input type="password" name="password" id="confirm_password_form_control" class="form-control">
        </div>
        <p>

        <div class="d-flex justify-content-center">
            <button class="btn btn-primary" type="submit">Regístrate</button>
        </div>
    </form>
    <hr/>
    <div class="sign-in-up-form">
        <div id="firebaseui-auth-container"></div>
        <div class="mt-auto p-3">
            <p>
                Debes aceptar los
                <a
                    asp-page="/s/Legal/TermsOfUse"
                    target="_blank">
                    terms and conditions
                </a>
                y la
                <a
                    asp-page="/s/Legal/PrivacyPolicy"
                    target="_blank">
                    política de privacidad
                </a>.
                Al registrate, estás aceptando ambos.
            </p>

            <p>
                Te enviaremos un correo electrónico para confirmar tu dirección de correo.
            </p>
        </div>
    </div>
</div>

@section Scripts
{
    <script>
    let form = document.getElementById("make_account_form");
    form.onsubmit = function (){
        if (document.getElementById("username_form_control").value === "" 
        || 
        document.getElementById("email_form_control").value === ""
        ||
        document.getElementById("password_form_control").value === ""){
            alert("Fill all fields");
            return false;
        }
        if (document.getElementById("password_form_control").value !== document.getElementById("confirm_password_form_control").value){
            alert("Please confirm password");
            return false;
        } 
        return true;
    };
    </script>
}
