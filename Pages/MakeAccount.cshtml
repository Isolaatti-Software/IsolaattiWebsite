@page
@model isolaatti_API.Pages.MakeAccount

@{
    Layout = "Shared/_LayoutWebAppOutside";
    ViewData["Title"] = "Sign up";
}
@section css
{
    <link rel="stylesheet" href="~/css/sign_style.css"/>
}
@section scripts_google
{
    <script>
        var firebaseConfig = {
            apiKey: "AIzaSyDZHVXLR_1imwVb2mCArnYpdbNx6XUPZBQ",
            authDomain: "isolaatti-b6641.firebaseapp.com",
            databaseURL: "https://isolaatti-b6641.firebaseio.com",
            projectId: "isolaatti-b6641",
            storageBucket: "isolaatti-b6641.appspot.com",
            messagingSenderId: "556033448926",
            appId: "1:556033448926:web:35759afc37d6a1585b1b4f",
            measurementId: "G-JQV4WX75RK"
        };
        // Initialize Firebase
        firebase.initializeApp(firebaseConfig);
                      
        var uiConfig = {
                signInSuccessUrl: 'GoogleAuth',
                signInOptions: [
                  // Leave the lines as is for the providers you want to offer your users.
                  firebase.auth.GoogleAuthProvider.PROVIDER_ID,
                ],
                // tosUrl and privacyPolicyUrl accept either url string or a callback
                // function.
                // Terms of service url/callback.
                tosUrl: 'https://static.content.isolaatti.com/documentos/terminos_y_condiciones_isolaatti-esp_original.pdf',
                // Privacy policy url/callback.
                privacyPolicyUrl: function() {
                  window.location.assign('https://static.content.isolaatti.com/documentos/politica_de_privacidad_isolaatti-esp_original.pdf');
                }
              };
        
              // Initialize the FirebaseUI Widget using Firebase.
              var ui = new firebaseui.auth.AuthUI(firebase.auth());
              // The start method will wait until the DOM is loaded.
              ui.start('#firebaseui-auth-container', uiConfig);
        </script>
}
@section metadata
{
    <meta property="og:url"                content="https://isolaatti.com/MakeAccount" />
    <meta property="og:type"               content="website" />
    <meta property="og:description"        content="Sign in. Isolaatti is an audio based social network and public posting tool" />
    <meta property="og:image"              content="https://isolaatti.com/res/imgs/metadata-image-isolaatti.png" />
}
<nav class="welcome-page-navbar">
    <a asp-page="/s/Welcome">The front</a>
    <a asp-page="/s/Features">Features</a>
    <a asp-page="/About">About</a>
</nav>
    
    <div class="d-flex col-lg-7 col-md-6 flex-column">
        <div class="mt-auto p-3">
            <p>You must read and accept the 
                <a
                    href="https://static.content.isolaatti.com/documentos/terminos_y_condiciones_isolaatti-esp_original.pdf"
                    target="_blank">
                    terms and conditions
                </a> 
                and the 
                <a
                    href="https://static.content.isolaatti.com/documentos/politica_de_privacidad_isolaatti-esp_original.pdf"
                    target="_blank">
                    privacy policy
                </a>. 
                By signing up, you confirm that you accepted them.
        </p>
        
            <p>
                You will receive an e-mail with a link to confirm your e-mail
                address.
            </p>
        </div>
        
    </div>
    
    @if (Model.LimitOfAccountsReached)
    {
        <div class="alert alert-info">
            <h4 class="alert-heading">We're on preview phase</h4>
            <p>At this stage, Isolaatti will only accept up to 50 accounts, so that the development server does not crash. Sorry for that!</p>
        </div>
    }
    <div class="col-lg-5 col-md-6 justify-content-end align-items-center">
        <form method="POST" id="make_account_form" class="sign-in-up-form">
            <h2>Sign up</h2>
            <p><a asp-page="LogIn">Sign in</a></p>
            @if (Model.emailUsed)
            {
                <div class="alert alert-danger">
                    The email address you entered is already in use.
                </div>
            }
            @if (Model.nameUsed)
            {
                <div class="alert alert-danger">
                    The name you entered is already in use.
                </div>
            }
            @if (Model.AccountNotMade)
            {
                <div class="alert alert-danger">
                    <h4 class="alert-heading">Sorry, your account could not be made</h4>
                    <p>As told you at the message at the top of this page, Isolaatti is only accepting up to 50 accounts, this because the development server might crash</p>
                </div>
            }
            @if (ViewData.ContainsKey("error_msg"))
            {
                <div class="alert alert-danger">
                    @ViewData["error_msg"]
                </div>
            }
            <div class="form-group">
                <label for="username_form_control">Username</label>
                <input type="text" name="username" id="username_form_control" class="form-control"
                       value='@ViewData["user_field"]'>
            </div>
            <div class="form-group">
                <label for="email_form_control">Email</label>
                <input type="email" name="email" id="email_form_control" class="form-control"
                       value='@ViewData["email_field"]'>
            </div>
            <div class="form-group">
                <label for="password_form_control">Password</label>
                <input type="password" name="password" id="password_form_control" class="form-control">
            </div>
            <div class="form-group">
                <label for="confirm_password_form_control">Confirm password</label>
                <input type="password" name="password" id="confirm_password_form_control" class="form-control">
            </div>
            <p>
               
            <div class="d-flex justify-content-center">
                <button class="btn btn-primary" type="submit">Sign up</button>
            </div>
        </form>
        <div id="firebaseui-auth-container"></div>
    </div>

@section Scripts
{
    <script>
    let form = document.getElementById("make_account_form");
    form.onsubmit = function (){
        if (document.getElementById("username_form_control").value === "" 
        || 
        document.getElementById("email_form_control").value === ""
        ||
        document.getElementById("password_form_control").value === ""){
            alert("Fill all fields");
            return false;
        }
        if (document.getElementById("password_form_control").value !== document.getElementById("confirm_password_form_control").value){
            alert("Please confirm password");
            return false;
        } 
        return true;
    };
    </script>
}
