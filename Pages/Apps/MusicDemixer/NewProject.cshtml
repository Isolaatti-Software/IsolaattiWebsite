@page
@model isolaatti_API.Pages.NewProject
@{
    Layout = "Shared/_LayoutWebApp";
    ViewData["Title"] = "New project";
}
<script>document.querySelector("#songs-link").classList.add("custom-active-nav-link")</script>
<div class="col-lg-3 col-md-2"></div>
<div class="col-lg-6 col-md-8">
    
    <div class="horizontal-panel-container">
        <div class="panel" id="add-file-panel">
             <h2>Add an audio file to the queue to process it!</h2>
                @if (Model.LimitOfSongsReached)
                {
                    <div class="alert alert-danger">
                        <h4 class="alert-heading">You are out of space</h4>
                        <p>You can only have up to <strong>10</strong> projects on your account. Delete some and try again.</p>
                    </div>
                }
                <p><a asp-page="OnQueue">Manage queue</a></p>
                <p class="mt-4">Only MP3 files are allowed</p>
                <div class="custom-file">
                    <input type="file" class="custom-file-input" id="audioFileInput" accept="audio/mpeg">
                    <label class="custom-file-label" for="customFile" id="label-input-file">Choose file</label>
                </div>
                <button class="btn btn-primary mt-4 ml-auto mr-auto" id="next-button" disabled>Next</button>
        </div>
        <div class="panel" id="fill-data-panel">
            <p class="mt-4">Some data has been automatically filled in, but you can change it anyway</p>
            <div class="form-group">
                <label for="field_songs_name">Song</label>
                <input type="text" class="form-control" id="field_songs_name" placeholder="Name goes here" disabled autocomplete="false">
            </div>
            <div class="form-group">
                <label for="field_songs_artist">Artist</label>
                <input type="text" class="form-control" id="field_songs_artist" placeholder="Artist goes here" disabled autocomplete="false">
            </div>
            <div class="d-flex">
                <div class="progress w-100 mt-2 mb-2" id="progress-bar-container" style="visibility: hidden">
                    <div id="file_upload_progress_bar" class="progress-bar" role="progressbar" style="width: 0" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"></div>
                </div>
            </div>
            <div class="d-flex justify-content-center">
                <button class="btn btn-primary mr-2" id="back-button">
                    Back
                </button>

                @if (!Model.LimitOfSongsReached)
                {
                    <button class="btn btn-primary" id="btnUploadAudioFile">
                        GO!
                    </button>
                }
                else
                {
                    <button disabled class="btn btn-primary" id="btnUploadAudioFile">
                        GO!
                    </button>
                }
            </div>
        </div>
    </div>

   

</div>
<div class="col-lg-3 col-md-2"></div>

@section Scripts
{
    @if (!Model.LimitOfSongsReached)
    {
        <script src="https://www.gstatic.com/firebasejs/7.23.0/firebase-app.js"></script>
        <script src="https://www.gstatic.com/firebasejs/7.23.0/firebase-storage.js"></script>
        <script>
                var firebaseConfig = {
                    apiKey: "AIzaSyDZHVXLR_1imwVb2mCArnYpdbNx6XUPZBQ",
                    authDomain: "isolaatti-b6641.firebaseapp.com",
                    databaseURL: "https://isolaatti-b6641.firebaseio.com",
                    projectId: "isolaatti-b6641",
                    storageBucket: "isolaatti-b6641.appspot.com",
                    messagingSenderId: "556033448926",
                    appId: "1:556033448926:web:35759afc37d6a1585b1b4f",
                    measurementId: "G-JQV4WX75RK"
                };
                // Initialize Firebase
                firebase.initializeApp(firebaseConfig);
                var storage = firebase.storage();
            </script>
        <script>
        let nextButton = document.getElementById("next-button");
        let backButton = document.getElementById("back-button");
        let cont = document.querySelector(".horizontal-panel-container");
        
        cont.scroll(0,0);
        
        nextButton.addEventListener("click", function (){
            cont.scroll(cont.scrollWidth/2,0);
        });
        backButton.addEventListener("click", function () {
           cont.scroll(0,0); 
        });
        
        </script>
        <script src="~/js/uploader.js"></script>
        
    }
}
