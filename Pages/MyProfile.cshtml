@page "/tu"
@using isolaatti_API.Models
@using isolaatti_API.Utils
@model isolaatti_API.Pages.MyProfile

@{
    Layout = "Shared/_LayoutWebApp";
    ViewData["Title"] = ViewData["name"];
}

@section CSS
{
    <script>const pageTitle = "Mi perfil"</script>
}

@* Add here Bootstrap modals *@
<!-- Modal edit profile -->
<div class="modal fade" id="modal-edit-profile">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Editar perfil</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    &times;
                </button>
            </div>
            <div class="modal-body">
                <form id="edit-profile-form" method="post" asp-controller="EditProfile" asp-action="FromWeb">
                    <div class="form-group">
                        <label for="edit-name-field">Nombre</label>
                        <input type="text" id="edit-name-field" class="form-control" name="newUsername">
                    </div>
                    <div class="form-group">
                        <label for="edit-email-field">Correo electrónico</label>
                        <input type="email" id="edit-email-field" class="form-control" name="newEmail">
                    </div>
                    <div class="form-group">
                        <label for="description-text-field">Descripción</label>
                        <small>Máximo 120 carácteres</small>
                        <textarea id="description-text-field" class="form-control" name="newDescription" maxlength="120">@ViewData["description"]</textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                <button type="submit" class="btn btn-primary" id="save-edited-profile" form="edit-profile-form">Guardar</button>
            </div>
        </div>
    </div>
</div>


<!-- Modal followers -->
<div class="modal fade" id="modal-followers">
    <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Seguidores</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    &times;
                </button>
            </div>
            <div class="modal-body">
                <div class="profiles-list-container">
                    @if (!Model.Followers.Any())
                    {
                        <p class="m-3">
                            Nadie te sigue. Puedes comenzar a seguir a más personas para conseguir seguidores.
                        </p>
                    }
                    @foreach (User user in Model.Followers)
                    {
                        <a class="user-profile-card"
                           asp-page="Profile" asp-route-id="@user.Id">
                            <img src='@UrlGenerators.GenerateProfilePictureUrl(user.Id, (string)ViewData["sessionToken"])'
                                 width="100" height="100" class="profile-pic mt-3"/>
                            <h6>@user.Name</h6>
                        </a>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal following -->
<div class="modal fade" id="modal-following">
    <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Siguiendo</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    &times;
                </button>
            </div>
            <div class="modal-body">
                <div class="profiles-list-container">
                    @if (!Model.Following.Any())
                    {
                        <p class="m-3">
                            No sigues a nadie.
                        </p>
                    }
                    @foreach (User user in Model.Following)
                    {
                        <a class="user-profile-card" asp-page="Profile" asp-route-id="@user.Id">
                            <img src='@UrlGenerators.GenerateProfilePictureUrl(user.Id, (string)ViewData["sessionToken"])'
                                 width="100" height="100" class="profile-pic mt-3"/>
                            <h6>@user.Name</h6>
                        </a>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal to select what to edit (photo or description)-->
<div class="modal fade" id="modal-edit-photo-or-audio">
    <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"><i class="far fa-edit"></i> Cambiar foto y audio de perfil</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    &times;
                </button>
            </div>
            <div class="modal-body">
                <div class="d-flex p-3 justify-content-center">
                    <button type="button" class="btn btn-primary mr-1" data-toggle="modal" data-target="#modal-change-photo">
                        <i class="fas fa-camera"></i> Cambiar foto de perfil
                    </button>
                    <button type="button" class="btn btn-primary ml-1" data-toggle="modal" data-target="#modal-audio-description">
                        <i class="fas fa-headphones"></i> Cambiar audio de perfil
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal change photo -->
<div class="modal fade" id="modal-change-photo">
    <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"><i class="fas fa-camera"></i> Cambiar foto de perfil</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    &times;
                </button>
            </div>
            <div class="modal-body">
                <div class="d-flex justify-content-center mb-2">
                    <canvas width="120" height="120" id="previewProfilePicture"></canvas>
                </div>
                <div class="custom-file">
                    <input type="file" class="custom-file-input" id="profilePictureLoadFormElement" accept="image/*">
                    <label class="custom-file-label" for="profilePictureLoadFormElement" id="fileNameProfilePic">Elegir archivo</label>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-sm btn-secondary" data-dismiss="modal" aria-label="Close">
                    Cancelar
                </button>
                <button class="btn btn-sm btn-primary" id="uploadProfilePhoto" disabled>
                    Aceptar
                </button>
            </div>
        </div>
    </div>
</div>

<!--Modal select profile color-->
<div class="modal fade" id="modal-set-profile-color">
    <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"><i class="fas fa-palette"></i> Establecer color del perfil</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    &times;
                </button>
            </div>
            <div class="modal-body">
                <input type="color" id="profileColorField" value="@Model.ProfileColor" class="form-control"/>
            </div>
            <div class="modal-footer">
                <button class="btn btn-sm btn-secondary" data-dismiss="modal" aria-label="Close">
                    Cancelar
                </button>
                <button class="btn btn-sm btn-primary" id="setColorBtn">
                    Aceptar
                </button>
            </div>
        </div>
    </div>
</div>


<div class="col-xl-2 col-lg-3 col-md-4 p-0" id="vue-container-for-left-bar">
    <!-- Modal audio description -->
    <div class="modal fade" id="modal-audio-description">
        <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Audio de perfil</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        &times;
                    </button>
                </div>
                <div class="modal-body">
                    <p>Esto sobreescribirá tu audio de perfil actual</p>
                    <div class="alert alert-danger" v-if="noAudioSource">
                        No hay un microfono disponible
                    </div>
                    <div class="progress">
                        <div class="progress-bar progress-bar-striped" role="progressbar" :style="progressStyle" aria-valuenow="10" aria-valuemin="0" aria-valuemax="100"></div>
                    </div>
                    {{clockFormatTime}}/02:00
                    <div class="d-flex justify-content-center">
                        @* This group shows to allow user to start recording *@
                        <div class="btn-group" v-if="!recorder.recording && !recorder.recorded">
                            <button class="btn btn-danger" v-on:click="startRecording()" v-bind:disabled="recorder.mediaStream == null || noAudioSource">
                                Comenzar a grabar
                            </button>
                        </div>

                        @* This group is shown when an audio is being recorded*@
                        <div class="btn btn-group" v-if="recorder.recording">
                            <button class="btn btn-primary" v-on:click="stopRecording()">
                                Detener
                            </button>
                        </div>

                        @* This group shows when an audio has been recorded *@
                        <div class="btn-group" v-if="recorder.recorded">
                            <button class="btn btn-info" v-on:click="playAudioDescriptionPreview()">
                                <i class="fas fa-play"></i>
                            </button>
                            <button class="btn btn-dark" v-on:click="resetRecording">
                                Descartar
                            </button>
                            <button class="btn btn-primary" v-on:click="uploadAudioDescriptionAudio" v-bind:disabled="isUploadingAudio">
                                Continuar
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <aside id="left-bar" class="p-2" style="background: linear-gradient(@Model.ProfileColor 5%, white)">

        <div class="d-flex justify-content-center align-items-center flex-column mb-3" style="position: relative">
            <img src="@Model.ProfilePhotoUrl" width="100" height="100" class="profile-pic" id="profile_photo" ref="profilePhoto"/>
            <button class="btn btn-sm btn-secondary" id="change-profile-photo-btn" data-toggle="modal"
                    data-target="#modal-edit-photo-or-audio">
                <i class="far fa-edit"></i>
            </button>
            <button id="play-audio-description-btn" v-on:click="playAudioDescription" v-if="audioDescriptionUrl !== null" v-html="audioDescriptionButtonInnerText"></button>
        </div>

        <div class="translucent-white-card">
            <p class="text-center m-0 overflow-auto text-break username-profile">@ViewData["name"]</p>
            <p class="text-break text-center">@ViewData["description"]</p>

            <nav class="d-flex justify-content-center">
                <button class="btn btn-primary btn-sm" id="edit-profile-button"
                        data-target="#modal-edit-profile" data-toggle="modal">
                    Editar perfil
                </button>
                <button class="btn btn-primary btn-sm ml-1" data-target="#modal-set-profile-color" data-toggle="modal">
                    <i class="fas fa-palette"></i>
                </button>
            </nav>

            <div class="d-flex flex-wrap mt-2">
                <div class="btn-group btn-group-sm">
                    <a class="btn btn-link"
                       data-toggle="modal" href="#modal-followers">
                        Seguidores: <b>@ViewData["numberOfFollowers"]</b>
                    </a>
                    <a class="btn btn-link"
                       data-toggle="modal" href="#modal-following">
                        Siguiendo: <b>@ViewData["numberOfFollowing"]</b>
                    </a>
                </div>
            </div>

            <div class="card mb-2">
                <ul class="list-group list-group-flush">
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        Likes
                        <span class="badge badge-primary badge-pill">@ViewData["numberOfLikes"]</span>
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        Publicaciones
                        <div class="badge badge-primary badge-pill">
                            @ViewData["numberOfPosts"]
                        </div>
                    </li>
                </ul>
            </div>
            <div style="height: 10px"></div>
        </div>
    </aside>
</div>
<div class="col-xl-8 col-lg-7 col-md-6" id="vue-container">

    @if ((bool)ViewData["profile_updated"])
    {
        <div class="alert alert-info">Perfil actualizado exitosamente</div>
    }
    @if ((bool)ViewData["nameNotAvailable"])
    {
        <div class="alert alert-warning"><strong>@ViewData["statusData"]</strong> no está disponible</div>
    }
    @if ((bool)ViewData["emailNotAvailable"])
    {
        <div class="alert alert-warning"><strong>@ViewData["statusData"]</strong> no está disponible</div>
    }

    <section id="your-posts-deposit" class="d-flex flex-column mt-3 align-items-center">

        <div class="w-100 d-flex align-items-center flex-column">
            <h5 class="m-3"><i class="far fa-newspaper"></i> Tus discusiones</h5>
            <div class="d-flex justify-content-end w-100">
                <div class="btn-group mb-2">
                    <button type="button" class="btn btn-secondary" title="Filtrar"
                            data-target="#modal-filter-posts" data-toggle="modal">
                        <i class="fas fa-filter"></i>
                    </button>
                    <button type="button" class="btn btn-secondary" title="Ordenar"
                            data-target="#modal-sort-posts" data-toggle="modal">
                        <i class="fas fa-sort"></i>
                    </button>
                </div>
            </div>


            <post-template v-for="post in filterAndSortedPosts" :post="post.postData"
                           v-on:like="likePost(post.postData)"
                           v-bind:theme="post.theme"
                           v-on:un-like="unLikePost(post.postData)"
                           v-model="postLinkToShare"
                           v-on:delete="deletePost(post.postData.id)"
                           v-on:play-audio="playAudio(post.postData.audioUrl)"
                           :paused="paused"
                           v-on:view-thread="viewComments(post.postData)"
                           v-bind:audio-url="audioUrl"
                           v-bind:key="post.postData.id">
            </post-template>
            <div v-if="loading" class="d-flex justify-content-center mt-2">
                <div class="spinner-border" role="status">
                    <span class="sr-only">Cargando más contenido...</span>
                </div>
            </div>
            <div v-if="moreContent" class="d-flex flex-column align-items-center mt-2">
                <button class="btn btn-primary" v-on:click="fetchPosts(lastId)">Cargar más</button>
            </div>

            <div class="modal fade" id="modal-share-post">
                <div class="modal-dialog-centered modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">
                                Compartir publicación
                            </h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <p>
                                Usa este enlace para compartir publicación
                            </p>
                            <button class="btn btn-primary" v-on:click="copyToClipboard(postLinkToShare)">Copiar al portapapeles</button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="modal fade" id="thread-viewer">
                <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-xl">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Comentarios</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <h5 v-if="commentsViewer.comments.length===0" class="m-4 text-center"><i class="fas fa-sad-tear"></i> No hay comentarios que mostrar</h5>
                            <comment v-for="comment in commentsViewer.comments"
                                     :comment="comment"
                                     :audio-url="audioUrl"
                                     :paused="paused"
                                     v-on:delete-comment="deleteComment(comment.id)"
                                     v-on:play-audio="playAudio(comment.audioUrl)">
                            </comment>
                        </div>
                        <div class="modal-footer">
                            <span>
                                <a :href="openThreadLink">Abrir discusión</a>
                            </span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Modal filter posts -->
            <div class="modal fade" id="modal-filter-posts">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Filtrar</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <h6>Contenido</h6>
                            <select class="custom-select" v-model="filterData.content">
                                <option value="all">Todo</option>
                                <option value="withAudio">Solo con audio</option>
                                <option value="withoutAudio">Solo sin audio</option>
                            </select>

                            <h6 class="mt-3">Privacidad</h6>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" id="privacy-filter-option-private" v-model="filterData.privacy.private">
                                <label class="form-check-label" for="privacy-filter-option-private">Privado</label>
                            </div>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" id="privacy-filter-option-isolaatti" v-model="filterData.privacy.isolaatti">
                                <label class="form-check-label" for="privacy-filter-option-isolaatti">Usuarios de Isolaatti</label>
                            </div>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" id="privacy-filter-option-everybody" v-model="filterData.privacy.public">
                                <label class="form-check-label" for="privacy-filter-option-everybody">Todos</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Modal sort posts -->
            <div class="modal fade" id="modal-sort-posts">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Ordenar</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <select class="custom-select" v-model="sortingData.ascending">
                                <option value="0">Descendente</option>
                                <option value="1">Ascendente</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </section>
</div>
<div class="col-xl-2 col-lg-2 col-md-2">
</div>

@if (Model.PasswordIsWrong)
{
    <script>
    // show password pane because password was not correct
    document.addEventListener("DOMContentLoaded", function () {
        $("#password_tab").tab('show');
        document.querySelector("#current_password_field").classList.add("is-invalid");
    });
    </script>
}
@if (ViewData["profile_open"].Equals("password"))
{
    <script>
    document.addEventListener("DOMContentLoaded", function () {
        $("#modal-password").modal('show');
    });
    </script>
}
else if (ViewData["profile_open"].Equals("links"))
{
    <script>
    document.addEventListener("DOMContentLoaded", function () {
        $("#modal-shared-links").modal('show');
    });
    </script>
}

@section Scripts
{
    <script>
    document.querySelector('#isolaatti-top-bar').style.backgroundColor = '@Model.ProfileColor';
    </script>
    <script src="https://www.gstatic.com/firebasejs/7.23.0/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/7.23.0/firebase-storage.js"></script>
    <script>
    var firebaseConfig = {
            apiKey: "AIzaSyDZHVXLR_1imwVb2mCArnYpdbNx6XUPZBQ",
            authDomain: "isolaatti-b6641.firebaseapp.com",
            databaseURL: "https://isolaatti-b6641.firebaseio.com",
            projectId: "isolaatti-b6641",
            storageBucket: "isolaatti-b6641.appspot.com",
            messagingSenderId: "556033448926",
            appId: "1:556033448926:web:35759afc37d6a1585b1b4f",
            measurementId: "G-JQV4WX75RK"
    };
    // Initialize Firebase
    firebase.initializeApp(firebaseConfig);
    var storage = firebase.storage();
    </script>

    @if (ViewData["audioDescriptionUrl"] == null)
    {
        <script>const audioDescriptionUrl = null</script>
    }
    else
    {
        <script>const audioDescriptionUrl = "@ViewData["audioDescriptionUrl"]"</script>
    }
    <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
    <script src="~/js/lib/purify.min.js"></script>
    <script src="~/js/VueComponents/postComponent.js"></script>
    <script src="~/js/VueComponents/commentComponent.js"></script>
    <script src="~/js/utils.js"></script>
    <script src="~/js/my_profile.js"></script>
}