@page "{id}"
@model isolaatti_API.Pages.Threads

@{
    Layout = "Shared/_LayoutWebApp";
    ViewData["Title"] = "Thread";
}

@section CSS
{
    <link href="~/css/threads.css" rel="stylesheet">
}

@section Scripts
{
    <script src="https://www.gstatic.com/firebasejs/7.23.0/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/7.23.0/firebase-storage.js"></script>
    <script>
    var firebaseConfig = {
        apiKey: "AIzaSyDZHVXLR_1imwVb2mCArnYpdbNx6XUPZBQ",
        authDomain: "isolaatti-b6641.firebaseapp.com",
        databaseURL: "https://isolaatti-b6641.firebaseio.com",
        projectId: "isolaatti-b6641",
        storageBucket: "isolaatti-b6641.appspot.com",
        messagingSenderId: "556033448926",
        appId: "1:556033448926:web:35759afc37d6a1585b1b4f",
        measurementId: "G-JQV4WX75RK"
    };
    // Initialize Firebase
    firebase.initializeApp(firebaseConfig);
    var storage = firebase.storage();
    </script>
    <script src="https://cdn.jsdelivr.net/npm/lodash@4.17.21/lodash.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
    <script>const threadToReadId = @Model.ThisPost.Id;</script>
    <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
    <script src="~/js/threads.js"></script>
}

<div class="col-lg-3 col-md-3"></div>
<div class="col-lg-6 col-md-8">
    <div id="vue-container">
        <div class="d-flex mb-2 flex-column p-2 post" :style="getPostStyle(post.themeJson)">
            <div class="d-flex justify-content-between align-items-center">
                <span class="user-name">
                    <a :href="`/Profile?id=${post.userId}`">{{post.userName}}</a>
                </span>
                <div class="dropdown dropleft">
                    <button class="btn btn-primary btn-sm" data-toggle="dropdown" aria-haspopup="true">
                        <i class="fas fa-ellipsis-h"></i>
                    </button>
                    <div class="dropdown-menu">
                        <a href="#" class="dropdown-item" v-if="post.userId===userId">Edit</a>
                        <a href="#" class="dropdown-item">Share</a>
                        <a href="#" class="dropdown-item" v-if="post.userId===userId">Delete</a>
                        <a :href=`/Reports/ReportPostOrComment?postId=${post.id}` class="dropdown-item" target="_blank">Report</a>
                    </div>
                </div>
            </div>
            <div class="d-flex privacy-icon-container">
                <div v-if="post.privacy === 2">
                    <i class="fas fa-user-friends" title="People on Isolaatti" aria-hidden="true"></i><span class="sr-only">People on Isolaatti</span>
                </div>
                <div v-if="post.privacy === 3">
                    <i class="fas fa-globe" title="All the world" aria-hidden="true"></i><span class="sr-only">Everyone</span>
                </div>
            </div>
            <div class="d-flex mt-1" v-if="post.audioAttachedUrl !== null">
                <button type="button" class="btn btn-primary btn-sm" v-on:click="playAudio(post.audioAttachedUrl)">
                    <i class="fas fa-play" v-if="post.audioAttachedUrl !== audioUrl || paused"></i>
                    <i class="fas fa-pause" v-else></i>
                </button>
            </div>
            <div class="mt-2 post-content" v-html="compileMarkdown(post.textContent)"></div>
            <div class="d-flex justify-content-end">
                <button v-if="!post.liked" v-on:click="likePost(post)" class="btn btn-dark btn-sm" type="button">
                    <i class="fas fa-thumbs-up" aria-hidden="true"></i> {{post.numberOfLikes}}
                </button>
                <button v-if="post.liked" v-on:click="unLikePost(post)" class="btn btn-primary btn-sm" type="button">
                    <i class="fas fa-thumbs-up" aria-hidden="true"></i> {{post.numberOfLikes}}
                </button>
            </div>
        </div>
        <div class="d-flex flex-column ml-4 comments-container">
            <div class="post d-flex mb-2 flex-column p-2" v-for="comment in comments">
                <div class="d-flex justify-content-between align-items-center">
                    <span class="user-name">
                        <a :href="`/Profile?id=${comment.whoWrote}`">{{comment.whoWroteName}}</a>
                    </span>
                    <div class="dropdown dropleft">
                        <button class="btn btn-primary btn-sm" data-toggle="dropdown" aria-haspopup="true">
                            <i class="fas fa-ellipsis-h"></i>
                        </button>
                        <div class="dropdown-menu">
                            <a href="#" class="dropdown-item" v-if="comment.whoWrote===userId">Edit</a>
                            <a href="#" class="dropdown-item" v-if="comment.whoWrote===userId">Delete</a>
                            <a :href=`/Reports/ReportPostOrComment?commentId=${comment.id}` class="dropdown-item" target="_blank">Report</a>
                        </div>
                    </div>
                </div>
                <div class="d-flex mt-1" v-if="comment.audioUrl !== null">
                    <button type="button" class="btn btn-primary btn-sm" v-on:click="playAudio(comment.audioUrl)">
                        <i class="fas fa-play" v-if="comment.audioUrl !== audioUrl || paused"></i>
                        <i class="fas fa-pause" v-else></i>
                    </button>
                </div>
                <div class="d-flex privacy-icon-container">
                    <div v-if="comment.privacy === 2">
                        <i class="fas fa-user-friends" title="People on Isolaatti" aria-hidden="true"></i><span class="sr-only">People on Isolaatti</span>
                    </div>
                    <div v-if="comment.privacy === 3">
                        <i class="fas fa-globe" title="All the world" aria-hidden="true"></i><span class="sr-only">Everyone</span>
                    </div>
                </div>
                <div class="mt-2 post-content" v-html="compileMarkdown(comment.textContent)"></div>
            </div>
        </div>

        <section id="comment-box" class="d-flex flex-column justify-content-between p-2 ml-auto mr-auto" ref="commentBox">
            <div class="d-flex mb-1">
                <div class="btn-group btn-group-sm overflow-auto">
                    <button class="btn btn-primary" v-on:click="insertHeading(1)">
                        <b>H1</b>
                    </button>
                    <button class="btn btn-primary" v-on:click="insertHeading(2)">
                        <b>H2</b>
                    </button>
                    <button class="btn btn-primary" v-on:click="insertHeading(3)">
                        <b>H3</b>
                    </button>
                    <button class="btn btn-primary" v-on:click="insertHeading(4)">
                        <b>H4</b>
                    </button>
                    <button class="btn btn-primary" v-on:click="insertHeading(5)">
                        <b>H5</b>
                    </button>
                    <button class="btn btn-primary" v-on:click="insertHeading(6)">
                        <b>H6</b>
                    </button>
                </div>
                <div class="btn-group btn-group-sm ml-1">
                    <button class="btn btn-primary" v-on:click="surroundTextWith('bold')">
                        <b>B</b>
                    </button>
                    <button class="btn btn-primary" v-on:click="surroundTextWith('italics')">
                        <em>I</em>
                    </button>
                </div>
                <button class="btn btn-secondary btn-sm ml-1 mr-2" data-target="#help-modal" data-toggle="modal">
                    <i class="fas fa-question"></i>
                </button>
                <button class="btn btn-sm btn-primary ml-auto" v-on:click="toggleCommentBoxFullSize" ref="buttonToggleComSize">
                    <i class="fas fa-arrow-up"></i>
                </button>
            </div>
            <div class="d-flex  flex-fill">

                <textarea id="comment-textarea"
                        class="form-control" v-model="commentTextarea" ref="commentTextareaRef" 
                        v-bind:selection-start.prop="selectionStart" v-bind:selection-end.prop="selectionEnd"></textarea>
            </div>
            <div class="d-flex justify-content-between">
                <button class="btn btn-primary mt-1 mb-1" data-target="#add-audio-modal" data-toggle="modal" v-on:click="requestMicrophone()">
                    <i class="fas fa-microphone"></i> {{addAudioButtonText}}
                </button>
                <button class="btn btn-primary mt-1 mb-1" v-on:click="makeComment"
                        v-bind:disabled="makeCommentButtonDisabled">
                    <i class="fas fa-paper-plane"></i> Comment
                </button>
            </div>
        </section>
        <div class="modal fade" id="add-audio-modal">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title"><i class="fas fa-microphone"></i> Add audio</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times</span>
                            </button>
                        </div>
                        <div class="modal-body d-flex flex-column">
                            <progress max="120" v-bind:value="audio.timeInSeconds"></progress>
                            <span>{{audio.timeInSeconds}} seconds</span>
                        </div>
                        <div class="modal-footer d-flex flex-column">
                            <div class="d-flex">
                                @* This group shows to allow user to start recording *@
                                <div class="btn-group" v-if="!audio.recording && !audio.recorded">
                                    <button class="btn btn-danger" v-on:click="startRecording()" v-bind:disabled="audio.recorder.mediaStream == null">
                                        Start recording
                                    </button>
                                </div>
        
                                @* This group is shown when an audio is being recorded*@
                                <div class="btn btn-group" v-if="audio.recording">
                                    <button class="btn btn-primary" v-on:click="stopRecording()">
                                        Stop
                                    </button>
                                </div>
        
                                @* This group shows when an audio has been recorded *@
                                <div class="btn-group" v-if="audio.recorded">
                                    <button class="btn btn-info" v-on:click="playRecord()">
                                        <i class="fas fa-play"></i>
                                    </button>
                                    <button class="btn btn-dark" v-on:click="resetRecording()">
                                        Discard
                                    </button>
                                    <button class="btn btn-primary" v-on:click="consolidate()">
                                        Continue
                                    </button>
                                </div>
                            </div>
                            
                        </div>
                    </div>
                </div>
            </div>
    </div>
</div>
<div class="col-lg-3 col-md-3"></div>
<div class="modal fade" id="help-modal">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Help</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>This text box accepts Markdown syntax, use it!</p>
                <h5><i class="fab fa-markdown"></i> What is Markdown</h5>
                <p>Markdown is a special syntax that allows you to give format to plain text. It can be rendered to HTML, which is what is done internally.</p>
                <h5 class="mt-2">Basics</h5>
                <h6>Paragraphs</h6>
                <p>Separate paragrahs by adding two break lines. Note that if you don't add a second break line, the content will be read as the same paragraph.</p>
                <h6>Heading</h6>
                <p>There are six heading levels (H1 to H6). Those are defined as follows:</p>
                <code>
                    <pre>
# This is header 1
## This is header 2
### This is header 3
#### This is header 4
##### This is header 5
###### This is header 6
</pre>
                </code>
                <p>Which will render like this</p>
                <h1>This is header 1</h1>
                <h2>This is header 2</h2>
                <h3>This is header 3</h3>
                <h4>This is header 4</h4>
                <h5>This is header 5</h5>
                <h6>This is header 6</h6>
                <hr/>
                
                <h6>Bold and italics</h6>
                <p>You can make text bold and/or italics. To do that use the following:</p>
                <code><pre>
**This is bold** *This is italics* ***This is bold and italics***
</pre>
                </code>
                <p>Which will render like this:</p>
                <p>
                    <b>This is bold</b> <i>This is italics</i> <b><i>This is bold and italics</i></b>
                </p>
                <hr/>
                
                <h6>Links</h6>
                <p>There are three ways of defining a link.</p>
                <p>If you will use the URL just once you can make:</p>
                <code><pre>
[This is a link](https://isolaatti.com/)
</pre></code>
                <p>That will render like this:</p>
                <p><a href="https://isolaatti.com/">This is a link</a></p>
                <hr/>
                
                <p>But, if you want to use the same URL more than once, you can declare the URL and then use it many times. Make it like so:</p>
                <code><pre>
Well, here is my [website]. And yes, to show it again, here is my [website]

[website]: https://erik-swdev.isolaatti.com/
</pre></code>
                <p>Which will render like this:</p>
                <p>
                    Well, here is my <a href="https://erik-swdev.isolaatti.com/">website</a> . And yes, to show it again, here is my <a href="https://erik-swdev.isolaatti.com/">website</a>
                </p>
                <hr/>
                
                <p>If you just want to show the URL as the text of the link, make this:</p>
                <code><pre>
&lt;https://erik-swdev.isolaatti.com&gt;
</pre></code>
                <p>Which will be rendered simply:</p>
                <p><a href="https://erik-swdev.isolaatti.com">https://erik-swdev.isolaatti.com</a></p>
                <hr/>
                
                <h5>Get more information</h5>
                <p>This text is not exhaustive, you can make much more using Markdown, such as tables, quotes, lists. 
                    In order to get more information about how to do such and more things, we recommend you to read <a href="https://www.markdownguide.org/basic-syntax/" target="_blank">this guide</a>.
                </p>
            </div>
        </div>
    </div>
</div>