@page
@using Microsoft.Extensions.Hosting
@model isolaatti_API.Pages.WebApp.Songs

@{
    Layout = "Shared/_LayoutWebApp";
    ViewData["Title"] = "Collection";
}
<h1>Your songs</h1>
<hr>
@if (Model.SongsBeingProcessedList.Any())
{
    <h2>Processing now</h2>
    <table class="table">
        <thead class="thead_dark">
        <tr>
            <th scope="col">Name</th>
            <th scope="col">Artist</th>
            <th></th>
        </tr>
        </thead>
        <tbody>
        @foreach (var song in Model.SongsBeingProcessedList)
        {
            <tr>
                <td>
                    @song.OriginalFileName
                </td>
                <td>@song.Artist</td>
                <td>
                    <div class="spinner-border" role="status">
                        <span class="sr-only">Processing...</span>
                    </div>
                </td>
            </tr>

        }
        </tbody>
    </table>
    <hr>
}
@if (Model.SongsList.Count().Equals(0))
{
    <div class="alert alert-info"><h2>You don't have any song</h2></div>
}
else
{
    if (Model.SongsBeingProcessedList.Any())
    {
        <h2>Available songs</h2>
    }
    <table class="table">
        <thead class="thead_dark">
        <tr>
            <th scope="col">Name</th>
            <th scope="col">Artist</th>
            <th></th>
        </tr>
        </thead>
        <tbody>
        @foreach (var song in Model.SongsList)
        {
            <tr id="songid_@song.Id">
                <td>
                    <a asp-page="Play" asp-route-id="@song.Id">
                        @song.OriginalFileName
                    </a>
                </td>
                <td>@song.Artist</td>
                <td>
                    <a href="#"><i class="fas fa-share-alt"></i></a>
                    <a href="javascript:deleteSong(@song.Id);"><i class="fas fa-trash-alt"></i></a>
                    <a href="#"><i class="fas fa-pencil-alt"></i></a>
                </td>
            </tr>

        }
        </tbody>
    </table>
}

<!-- Modify song info modal-->
<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal" data-whatever="mdo">Open modal for mdo</button>
<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal" data-whatever="fat">Open modal for fat</button>
<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal" data-whatever="getbootstrap">Open modal for getbootstrap</button>

<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">New message</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label for="recipient-name" class="col-form-label">Recipient:</label>
                        <input type="text" class="form-control" id="recipient-name">
                    </div>
                    <div class="form-group">
                        <label for="message-text" class="col-form-label">Message:</label>
                        <textarea class="form-control" id="message-text"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Send message</button>
            </div>
        </div>
    </div>
</div>

<script src="https://www.gstatic.com/firebasejs/7.23.0/firebase-app.js"></script>
<script src="https://www.gstatic.com/firebasejs/7.23.0/firebase-storage.js"></script>
@if (Model.Environment.IsDevelopment())
{
    <script>
  // Your web app's Firebase configuration
  // For Firebase JS SDK v7.20.0 and later, measurementId is optional
  var firebaseConfig = {
    apiKey: "AIzaSyDZHVXLR_1imwVb2mCArnYpdbNx6XUPZBQ",
    authDomain: "isolaatti-b6641.firebaseapp.com",
    databaseURL: "https://isolaatti-b6641.firebaseio.com",
    projectId: "isolaatti-b6641",
    storageBucket: "isolaatti-b6641.appspot.com",
    messagingSenderId: "556033448926",
    appId: "1:556033448926:web:35759afc37d6a1585b1b4f",
    measurementId: "G-JQV4WX75RK"
  };
  // Initialize Firebase
  firebase.initializeApp(firebaseConfig);
  var storage = firebase.storage();
</script>
}
else
{
    <script>
    var firebaseConfig={apiKey:"AIzaSyDZHVXLR_1imwVb2mCArnYpdbNx6XUPZBQ",authDomain:"isolaatti-b6641.firebaseapp.com",databaseURL:"https://isolaatti-b6641.firebaseio.com",projectId:"isolaatti-b6641",storageBucket:"isolaatti-b6641.appspot.com",messagingSenderId:"556033448926",appId:"1:556033448926:web:35759afc37d6a1585b1b4f",measurementId:"G-JQV4WX75RK"};firebase.initializeApp(firebaseConfig);var storage=firebase.storage();
    </script>
}
<script>
document.addEventListener("DOMContentLoaded", function () {
    $('#exampleModal').on('show.bs.modal', function (event) {
      var button = $(event.relatedTarget) // Button that triggered the modal
      var recipient = button.data('whatever') // Extract info from data-* attributes
      // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
      // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
      var modal = $(this)
      modal.find('.modal-title').text('New message to ' + recipient)
      modal.find('.modal-body input').val(recipient)
    })
});
</script>

<script src="~/js/collection.js"></script>